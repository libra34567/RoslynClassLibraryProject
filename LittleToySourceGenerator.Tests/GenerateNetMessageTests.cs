namespace LittleToySourceGenerator.Tests;

using Microsoft.CodeAnalysis;
using Microsoft.VisualStudio.TestTools.UnitTesting;

[TestClass]
public class GenerateNetMessageTests : CodeGenerationTestBase
{
    [TestMethod]
    public void NetMessageGeneration()
    {
        string source = @"
using Plugins.basegame.Events;
using Unity.Collections;

[CodeGenNetMessage]
public partial struct JoinWorldMessage
{
    public long PlayerId;

    public int PlayerHatIndex;
    public int PlayerBodyIndex;
    public FixedString64Bytes PlayerName;
}
";
        var generator = new Generator();
        generator.DisableAllGeneration();
        generator.EnableNetMessageGeneration = true;
        string output = this.GetGeneratedOutput(source, generator, NullableContextOptions.Disable);

        Assert.IsNotNull(output);

        var expectedOutput = @"// <auto-generated>
// Code generated by LittleToy Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
#pragma warning disable 1591
using DOTSNET;
using Unity.Collections;
using System;

public partial struct JoinWorldMessage : NetworkMessage
{
        public JoinWorldMessage(Int64 playerId, Int32 playerHatIndex, Int32 playerBodyIndex, FixedString64Bytes playerName)
        {
            this.PlayerId = playerId;
            this.PlayerHatIndex = playerHatIndex;
            this.PlayerBodyIndex = playerBodyIndex;
            this.PlayerName = playerName;
        }


    public bool Serialize(ref NetworkWriter writer)
    {
        return
        writer.WriteLong(PlayerId) &&
        writer.WriteInt(PlayerHatIndex) &&
        writer.WriteInt(PlayerBodyIndex) &&
        writer.WriteFixedString64(PlayerName);
    }

    public bool Deserialize(ref NetworkReader reader)
    {
        return
        reader.ReadLong(out PlayerId) &&
        reader.ReadInt(out PlayerHatIndex) &&
        reader.ReadInt(out PlayerBodyIndex) &&
        reader.ReadFixedString64(out PlayerName);
    }
}
";
        Assert.AreEqual(expectedOutput, output);
    }

    [TestMethod]
    public void NoFields()
    {
        string source = @"
using Plugins.basegame.Events;
using Unity.Collections;

[CodeGenNetMessage]
public partial struct JoinWorldMessage
{
}
";
        var generator = new Generator();
        generator.DisableAllGeneration();
        generator.EnableNetMessageGeneration = true;
        string output = this.GetGeneratedOutput(source, generator, NullableContextOptions.Disable);

        Assert.IsNotNull(output);

        var expectedOutput = @"// <auto-generated>
// Code generated by LittleToy Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
#pragma warning disable 1591
using DOTSNET;
using Unity.Collections;
using System;

public partial struct JoinWorldMessage : NetworkMessage
{
        public JoinWorldMessage()
        {
        }


    public bool Serialize(ref NetworkWriter writer)
    {
        return true;
    }

    public bool Deserialize(ref NetworkReader reader)
    {
        return true;
    }
}
";
        Assert.AreEqual(expectedOutput, output);
    }
}
