namespace LittleToyZenjectify.Tests;

using Microsoft.CodeAnalysis;
using Microsoft.VisualStudio.TestTools.UnitTesting;

[TestClass]
public class GenerateEcsDataTests : CodeGenerationTestBase
{
    [TestMethod]
    public void MonoClassWithSceneObjInstance()
    {
        string source = @"
using UnityEngine;
using Zenject;

[ZenGen(ZenGenTypeEnum.MonoClassWithSceneObjInstance, InstallerNameEnum.SomeNewInstaller)]
public class ZenGenSomeSystemInNewInstaller: MonoBehaviour
{
}

";
        var generator = new Generator();
        string output = this.GetGeneratedOutput(source, generator, NullableContextOptions.Disable);

        Assert.IsNotNull(output);

        var expectedOutput = @"// <auto-generated>
// Code generated by LittleToy Zenjectify Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
#pragma warning disable 1591
using Sirenix.OdinInspector;
using UnityEngine;
using Zenject;

public class SomeNewInstaller : MonoInstaller
{
    [Required]
    [SceneObjectsOnly]
    [SerializeField]
    private ZenGenSomeSystemInNewInstaller zenGenSomeSystemInNewInstaller;


    private void InstallMonoClassesWithSceneObjInstance()
    {
        Container.Bind<ZenGenSomeSystemInNewInstaller>().FromInstance(zenGenSomeSystemInNewInstaller).AsSingle().NonLazy();
    }

    public override void InstallBindings()
    {
        base.InstallBindings();
        InstallMonoClassesWithSceneObjInstance();
    }
}
";
        Assert.AreEqual(expectedOutput, output);
    }
}